services:
  timescaledb:
    image: timescale/timescaledb:2.13.1-pg14
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: postgres
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lighthouse-network

  temporal-postgresql:
    image: postgres:14
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    ports:
      - "5433:5432"
    volumes:
      - temporal_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal -d temporal"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lighthouse-network

  temporal:
    image: temporalio/auto-setup:1.22.3
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=temporal-postgresql
      - DYNAMIC_CONFIG_FILE_PATH=/etc/temporal/config/dynamicconfig/development.yaml
    ports:
      - "7232:7233"
    depends_on:
      temporal-postgresql:
        condition: service_healthy
    volumes:
      - ./temporal-config:/etc/temporal/config/dynamicconfig
    networks:
      - lighthouse-network
    healthcheck:
      test: ["CMD", "tctl", "--address", "temporal:7232", "cluster", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  temporal-ui:
    image: temporalio/ui:2.21.3
    ports:
      - "8080:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7232
    depends_on:
      - temporal
    networks:
      - lighthouse-network

networks:
  lighthouse-network:
    driver: bridge

volumes:
  timescale_data:
  temporal_postgres_data:
